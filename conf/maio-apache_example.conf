<VirtualHost *:80>
    ServerName maio
    RewriteCond %{HTTP_HOST} ^maio [NC]
    RewriteRule ^(.*)$ https://maio/$1 [L,R=301]
</VirtualHost>

<VirtualHost *:443>
    SSLEngine on
    SSLCertificateFile "${SRVROOT}/conf/server.crt"
    SSLCertificateKeyFile "${SRVROOT}/conf/server.key"

    DocumentRoot "/path/to/maio/html"
    ServerName maio

    CustomLog "${SRVROOT}/logs/maio.access_ssl.log" common
    ErrorLog "${SRVROOT}/logs/maio.error_ssl.log"
    TransferLog "${SRVROOT}/logs/maio.transfer_ssl.log"

    WSGIScriptAlias / /path/to/maio/maio/wsgi.py application-group=%{GLOBAL}
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On

    # RewriteEngine On
    # RewriteRule ^$ / [R,L]

    Header set X-MAIO-HOST "maio-dev"

    Alias /static/thumbnails /path/to/maio/filestore/thumbnails
    Alias /static/media /path/to/maio/filestore/media
    Alias /static /path/to/maio/static
    Alias /favicon.ico /path/to/maio/static/maio/imgs/favicon.ico

    <Directory /path/to/maio>
        Require all granted
    </Directory>

    #   SSL Protocol Adjustments:
    #   The safe and default but still SSL/TLS standard compliant shutdown
    #   approach is that mod_ssl sends the close notify alert but doesn't wait for
    #   the close notify alert from client. When you need a different shutdown
    #   approach you can use one of the following variables:
    #   o ssl-unclean-shutdown:
    #     This forces an unclean shutdown when the connection is closed, i.e. no
    #     SSL close notify alert is sent or allowed to be received.  This violates
    #     the SSL/TLS standard but is needed for some brain-dead browsers. Use
    #     this when you receive I/O errors because of the standard approach where
    #     mod_ssl sends the close notify alert.
    #   o ssl-accurate-shutdown:
    #     This forces an accurate shutdown when the connection is closed, i.e. a
    #     SSL close notify alert is send and mod_ssl waits for the close notify
    #     alert of the client. This is 100% SSL/TLS standard compliant, but in
    #     practice often causes hanging connections with brain-dead browsers. Use
    #     this only for browsers where you know that their SSL implementation
    #     works correctly.
    #   Notice: Most problems of broken clients are also related to the HTTP
    #   keep-alive facility, so you usually additionally want to disable
    #   keep-alive for those clients, too. Use variable "nokeepalive" for this.
    #   Similarly, one has to force some clients to use HTTP/1.0 to workaround
    #   their broken HTTP/1.1 implementation. Use variables "downgrade-1.0" and
    #   "force-response-1.0" for this.
    BrowserMatch "MSIE [2-5]" \
            nokeepalive ssl-unclean-shutdown \
            downgrade-1.0 force-response-1.0
</virtualhost>
